{"ast":null,"code":"import { GET_COUNTRIES, GET_ACTIVITIES, GET_COUNTRY_ID, FILTER_CONTINENT, FILTER_ACTIVITIES } from \"./actions\";\nconst initialState = {\n  allCountries: [],\n  countries: [],\n  activities: [],\n  detail: []\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_COUNTRIES:\n      return {\n        ...state,\n        countries: action.payload,\n        allCountries: action.payload\n      };\n    case GET_ACTIVITIES:\n      return {\n        ...state,\n        activities: action.payload\n      };\n    case GET_COUNTRY_ID:\n      return {\n        ...state,\n        detail: action.payload\n      };\n    case FILTER_CONTINENT:\n      const allCountries = state.allCountries;\n      const filterByContinent = action.payload === 'All' ? allCountries : allCountries.filter(elem => elem.continent === action.payload);\n      return {\n        ...state,\n        countries: filterByContinent\n      };\n    case FILTER_ACTIVITIES:\n      //[{pais[{travel},{travel}]},{pais[{travel},{travel}]}] =>'travelName'\n      //tengo que filtrar los paises que tiengan la actividad con el mismo nombre que ingresa (travelName)\n      const allCountries2 = state.allCountries;\n      const filterCountriesTravel = action.payload === 'All' ? allCountries2 : allCountries2.filter(elem => existe(elem.travels, action.payload) === true);\n      const existe = (travels, travelName) => {\n        const hay = travels.filter(elem => elem.name === travelName);\n        let ret = false;\n        if (hay.length !== 0) {\n          ret = true;\n        }\n        return ret;\n      };\n      return {\n        ...state,\n        activities: action.payload,\n        countries: filterCountriesTravel\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["GET_COUNTRIES","GET_ACTIVITIES","GET_COUNTRY_ID","FILTER_CONTINENT","FILTER_ACTIVITIES","initialState","allCountries","countries","activities","detail","rootReducer","state","action","type","payload","filterByContinent","filter","elem","continent","allCountries2","filterCountriesTravel","existe","travels","travelName","hay","name","ret","length"],"sources":["/home/antoo/Documentos/Henry/PI/PI-Countries-main/client/src/redux/reducer.js"],"sourcesContent":["import {\n    GET_COUNTRIES,\n    GET_ACTIVITIES,\n    GET_COUNTRY_ID,\n    FILTER_CONTINENT,\n    FILTER_ACTIVITIES,\n} from \"./actions\";\n\n\n\nconst initialState = {\n    allCountries: [],\n    countries: [],\n    activities: [],\n    detail: [],\n}\n\nconst rootReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_COUNTRIES:\n            return {\n                ...state,\n                countries: action.payload,\n                allCountries: action.payload,\n            };\n            case GET_ACTIVITIES:\n                return{\n                    ...state,\n                    activities:action.payload,\n                }\n        case GET_COUNTRY_ID:\n            return {\n                ...state,\n                detail: action.payload,\n            };\n        case FILTER_CONTINENT:\n            const allCountries= state.allCountries;\n            const filterByContinent= action.payload==='All' ? allCountries : allCountries.filter(elem=> elem.continent === action.payload);\n            return {\n                ...state,\n                countries: filterByContinent,\n            };\n            case FILTER_ACTIVITIES:\n                \n                //[{pais[{travel},{travel}]},{pais[{travel},{travel}]}] =>'travelName'\n                //tengo que filtrar los paises que tiengan la actividad con el mismo nombre que ingresa (travelName)\n                const allCountries2= state.allCountries;\n                const filterCountriesTravel= action.payload==='All' ? allCountries2 : allCountries2.filter(elem=> existe(elem.travels,action.payload)===true);\n                const existe = (travels, travelName) =>{\n                    const hay=travels.filter(elem=>elem.name === travelName);\n                    let ret=false;\n\n                    if(hay.length !== 0){\n                        ret=true;\n                    }\n\n                    return ret;\n                }\n                return{\n                    ...state,\n                    activities:action.payload,\n                    countries: filterCountriesTravel,\n                }\n\n        default:\n            return { ...state };\n    }\n}\n\nexport default rootReducer;"],"mappings":"AAAA,SACIA,aAAa,EACbC,cAAc,EACdC,cAAc,EACdC,gBAAgB,EAChBC,iBAAiB,QACd,WAAW;AAIlB,MAAMC,YAAY,GAAG;EACjBC,YAAY,EAAE,EAAE;EAChBC,SAAS,EAAE,EAAE;EACbC,UAAU,EAAE,EAAE;EACdC,MAAM,EAAE;AACZ,CAAC;AAED,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGN,YAAY;EAAA,IAAEO,MAAM;EAC7C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKb,aAAa;MACd,OAAO;QACH,GAAGW,KAAK;QACRJ,SAAS,EAAEK,MAAM,CAACE,OAAO;QACzBR,YAAY,EAAEM,MAAM,CAACE;MACzB,CAAC;IACD,KAAKb,cAAc;MACf,OAAM;QACF,GAAGU,KAAK;QACRH,UAAU,EAACI,MAAM,CAACE;MACtB,CAAC;IACT,KAAKZ,cAAc;MACf,OAAO;QACH,GAAGS,KAAK;QACRF,MAAM,EAAEG,MAAM,CAACE;MACnB,CAAC;IACL,KAAKX,gBAAgB;MACjB,MAAMG,YAAY,GAAEK,KAAK,CAACL,YAAY;MACtC,MAAMS,iBAAiB,GAAEH,MAAM,CAACE,OAAO,KAAG,KAAK,GAAGR,YAAY,GAAGA,YAAY,CAACU,MAAM,CAACC,IAAI,IAAGA,IAAI,CAACC,SAAS,KAAKN,MAAM,CAACE,OAAO,CAAC;MAC9H,OAAO;QACH,GAAGH,KAAK;QACRJ,SAAS,EAAEQ;MACf,CAAC;IACD,KAAKX,iBAAiB;MAElB;MACA;MACA,MAAMe,aAAa,GAAER,KAAK,CAACL,YAAY;MACvC,MAAMc,qBAAqB,GAAER,MAAM,CAACE,OAAO,KAAG,KAAK,GAAGK,aAAa,GAAGA,aAAa,CAACH,MAAM,CAACC,IAAI,IAAGI,MAAM,CAACJ,IAAI,CAACK,OAAO,EAACV,MAAM,CAACE,OAAO,CAAC,KAAG,IAAI,CAAC;MAC7I,MAAMO,MAAM,GAAG,CAACC,OAAO,EAAEC,UAAU,KAAI;QACnC,MAAMC,GAAG,GAACF,OAAO,CAACN,MAAM,CAACC,IAAI,IAAEA,IAAI,CAACQ,IAAI,KAAKF,UAAU,CAAC;QACxD,IAAIG,GAAG,GAAC,KAAK;QAEb,IAAGF,GAAG,CAACG,MAAM,KAAK,CAAC,EAAC;UAChBD,GAAG,GAAC,IAAI;QACZ;QAEA,OAAOA,GAAG;MACd,CAAC;MACD,OAAM;QACF,GAAGf,KAAK;QACRH,UAAU,EAACI,MAAM,CAACE,OAAO;QACzBP,SAAS,EAAEa;MACf,CAAC;IAET;MACI,OAAO;QAAE,GAAGT;MAAM,CAAC;EAAC;AAEhC,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module"}
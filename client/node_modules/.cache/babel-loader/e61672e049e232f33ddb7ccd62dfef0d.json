{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\n//Thunk es un middelware que nos permite realizar aciones asincrónicas(en este caso las de actions.js).\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducer\";\n//applyMiddelware tiene su propia librería definida.\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\n//Cuando esta tachado significa que esta deprecado, y recomiendan usar la última actualización..\n//.. pero eso no significa que no siga funcionando.\nconst store = createStore(rootReducer,\n//Una forma es con el COMPOSE (hay que importarlo en la prrimer línea desde redux)..\n/*\ncompose(\n    //..que lo que hace es aplicar el middelware de thunk a la store..\n    applyMiddleware(thunk),\n    //..y pasarle esta configuración para que en el navegador nos aparezcan las devTools.\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)*/\n//También se puede hacer así (que iría como segundo parámetro de createStore)..\n//..que con el composeWithDevTools ya nos da las devToos para el navegador..\n\n//..y le pasamos el applyMiddelware con el thunk.\ncomposeWithDevTools(applyMiddleware(thunk)));\n\n//DATO: Redux-thunk te permite escribir creadores de acciones que retornan una función en vez de un objeto de acción típico..\n//..Entonces, el thunk puede ser usado para retrasar el envío de una acción hasta que se cumpla una línea de código asíncrona.\n\n//Si no funciona instalar en la rama client: (ver que..)\n//npm i redux redux-devtools-extension redux-thunk thunk react-router-dom react-redux axios\n\nexport default store;","map":{"version":3,"names":["createStore","applyMiddleware","thunk","rootReducer","composeWithDevTools","store"],"sources":["/home/antoo/Documentos/Henry/PI/PI-Countries-main/client/src/redux/store.js"],"sourcesContent":["import {createStore,applyMiddleware} from \"redux\";\n//Thunk es un middelware que nos permite realizar aciones asincrónicas(en este caso las de actions.js).\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducer\";\n//applyMiddelware tiene su propia librería definida.\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\n//Cuando esta tachado significa que esta deprecado, y recomiendan usar la última actualización..\n//.. pero eso no significa que no siga funcionando.\nconst store= createStore(rootReducer,\n    //Una forma es con el COMPOSE (hay que importarlo en la prrimer línea desde redux)..\n    /*\n    compose(\n        //..que lo que hace es aplicar el middelware de thunk a la store..\n        applyMiddleware(thunk),\n        //..y pasarle esta configuración para que en el navegador nos aparezcan las devTools.\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )*/\n    //También se puede hacer así (que iría como segundo parámetro de createStore)..\n    //..que con el composeWithDevTools ya nos da las devToos para el navegador..\n    \n    //..y le pasamos el applyMiddelware con el thunk.\n    composeWithDevTools(\n        applyMiddleware(thunk),\n    )\n    \n)\n\n//DATO: Redux-thunk te permite escribir creadores de acciones que retornan una función en vez de un objeto de acción típico..\n//..Entonces, el thunk puede ser usado para retrasar el envío de una acción hasta que se cumpla una línea de código asíncrona.\n\n//Si no funciona instalar en la rama client: (ver que..)\n//npm i redux redux-devtools-extension redux-thunk thunk react-router-dom react-redux axios\n\n\nexport default store;"],"mappings":"AAAA,SAAQA,WAAW,EAACC,eAAe,QAAO,OAAO;AACjD;AACA,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,WAAW,MAAM,WAAW;AACnC;AACA,SAAQC,mBAAmB,QAAO,0BAA0B;;AAE5D;AACA;AACA,MAAMC,KAAK,GAAEL,WAAW,CAACG,WAAW;AAChC;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACI;AACA;;AAEA;AACAC,mBAAmB,CACfH,eAAe,CAACC,KAAK,CAAC,CACzB,CAEJ;;AAED;AACA;;AAEA;AACA;;AAGA,eAAeG,KAAK"},"metadata":{},"sourceType":"module"}